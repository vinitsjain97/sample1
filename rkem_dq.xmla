{
  "create": {
    "parentObject": {
      "database": "E2E_DQ"
    },
    "table": {
      "name": "E2E tF_rkem_dq_table",
      "columns": [
        {
          "name": "eqpno",
          "dataType": "string",
          "sourceColumn": "eqpno"
        },
        {
          "name": "acttim",
          "dataType": "dateTime",
          "sourceColumn": "acttim"
        },
        {
          "name": "acttim_utc",
          "dataType": "dateTime",
          "sourceColumn": "acttim_utc"
        },
        {
          "name": "year",
          "dataType": "int64",
          "sourceColumn": "year"
        },
        {
          "name": "Month_name",
          "dataType": "string",
          "sourceColumn": "Month_name"
        },
        {
          "name": "geosite_cd",
          "dataType": "string",
          "sourceColumn": "geosite_cd"
        },
        {
          "name": "move",
          "dataType": "string",
          "sourceColumn": "move"
        },
        {
          "name": "ffe",
          "dataType": "double",
          "sourceColumn": "ffe"
        },
        {
          "name": "chtim",
          "dataType": "dateTime",
          "sourceColumn": "chtim"
        },
        {
          "name": "etl_load_date",
          "dataType": "dateTime",
          "sourceColumn": "etl_load_date"
        },
        {
          "name": "COUNTRY_NAME",
          "dataType": "string",
          "sourceColumn": "COUNTRY_NAME"
        },
        {
          "name": "LOC_CD",
          "dataType": "string",
          "sourceColumn": "LOC_CD"
        },
        {
          "name": "Week",
          "dataType": "int64",
          "sourceColumn": "Week"
        },
        {
          "name": "empty_units_cnt",
          "dataType": "int64",
          "sourceColumn": "empty_units_cnt"
        },
        {
          "name": "full_units_cnt",
          "dataType": "int64",
          "sourceColumn": "full_units_cnt"
        },
        {
          "name": "live_reefer_units_cnt",
          "dataType": "int64",
          "sourceColumn": "live_reefer_units_cnt"
        },
        {
          "name": "oog_units_cnt",
          "dataType": "int64",
          "sourceColumn": "oog_units_cnt"
        },
        {
          "name": "Hazardous_cnt",
          "dataType": "int64",
          "sourceColumn": "Hazardous_cnt"
        },
        {
          "name": "Hazardous_reefer_cnt",
          "dataType": "int64",
          "sourceColumn": "Hazardous_reefer_cnt"
        },
        {
          "name": "LATENCY",
          "dataType": "double",
          "sourceColumn": "LATENCY"
        },
        {
          "name": "Source_LATENCY",
          "dataType": "double",
          "sourceColumn": "Source_LATENCY"
        },
        {
          "name": "Raw_LATENCY",
          "dataType": "double",
          "sourceColumn": "Raw_LATENCY"
        },
        {
          "name": "date_part",
          "dataType": "dateTime",
          "sourceColumn": "date_part"
        },
        {
          "name": "INSERT_TS",
          "dataType": "dateTime",
          "sourceColumn": "INSERT_TS"
        },
        {
          "type": "calculated",
          "name": "Year_Quarter",
          "dataType": "string",
          "isDataTypeInferred": true,
          "expression": "'E2E tF_rkem_dq_table'[year] & \"Q\" & QUARTER('E2E tF_rkem_dq_table'[acttim_utc])"
        },
        {
          "type": "calculated",
          "name": "Year_month",
          "dataType": "string",
          "isDataTypeInferred": true,
          "expression": "'E2E tF_rkem_dq_table'[year]&'E2E tF_rkem_dq_table'[Month_name]"
        },
        {
          "type": "calculated",
          "name": "Year_Week",
          "dataType": "string",
          "isDataTypeInferred": true,
          "expression": [
            " IF('E2E tF_rkem_dq_table'[Week] > 9 ,",
            "CONCATENATE('E2E tF_rkem_dq_table'[year],'E2E tF_rkem_dq_table'[Week]),",
            "'E2E tF_rkem_dq_table'[year]&\"0\"&'E2E tF_rkem_dq_table'[Week])"
          ]
        },
        {
          "type": "calculated",
          "name": "Delayed_Container_ind",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF('E2E tF_rkem_dq_table'[LATENCY] > 24 , 1,0)"
        },
        {
          "type": "calculated",
          "name": "Source_delayed_container_ind",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF('E2E tF_rkem_dq_table'[Source_LATENCY] > 24 , 1,0)"
        },
        {
          "type": "calculated",
          "name": "Raw_Delayed_Container_ind",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF('E2E tF_rkem_dq_table'[Raw_LATENCY] > 24 , 1,0)"
        },
        {
          "type": "calculated",
          "name": "delayed_ffe_ind",
          "dataType": "double",
          "isDataTypeInferred": true,
          "expression": " IF('E2E tF_rkem_dq_table'[LATENCY] > 24 , 'E2E tF_rkem_dq_table'[ffe],0)"
        },
        {
          "type": "calculated",
          "name": "Source_delayed_ffe_ind",
          "dataType": "double",
          "isDataTypeInferred": true,
          "expression": " IF('E2E tF_rkem_dq_table'[Source_LATENCY] > 24 , 'E2E tF_rkem_dq_table'[ffe],0)"
        },
        {
          "type": "calculated",
          "name": "Delayed_empty_unit",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF(AND('E2E tF_rkem_dq_table'[Source_LATENCY] > 24,'E2E tF_rkem_dq_table'[empty_units_cnt] = 1 ), 1, 0)"
        },
        {
          "type": "calculated",
          "name": "Delayed_full_unit",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF(AND('E2E tF_rkem_dq_table'[Source_LATENCY] > 24,'E2E tF_rkem_dq_table'[full_units_cnt] = 1 ), 1, 0)"
        },
        {
          "type": "calculated",
          "name": "Delayed_live_reef_unit",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF(AND('E2E tF_rkem_dq_table'[Source_LATENCY] > 24,'E2E tF_rkem_dq_table'[live_reefer_units_cnt] = 1 ), 1, 0)"
        },
        {
          "type": "calculated",
          "name": "Delayed_oog_unit",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF(AND('E2E tF_rkem_dq_table'[Source_LATENCY] > 24,'E2E tF_rkem_dq_table'[oog_units_cnt] = 1 ), 1, 0)"
        },
        {
          "type": "calculated",
          "name": "Delayed_hazard_unit",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF(AND('E2E tF_rkem_dq_table'[Source_LATENCY] > 24,'E2E tF_rkem_dq_table'[Hazardous_cnt] = 1 ), 1, 0)"
        },
        {
          "type": "calculated",
          "name": "Delayed_hazard_reef_unit",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": " IF(AND('E2E tF_rkem_dq_table'[Source_LATENCY] > 24,'E2E tF_rkem_dq_table'[Hazardous_reefer_cnt] = 1 ), 1, 0)"
        },
        {
          "type": "calculated",
          "name": "Container_Count",
          "dataType": "int64",
          "isDataTypeInferred": true,
          "expression": "1"
        }
      ],
      "partitions": [
        {
          "name": "Partition_Last_2_Months",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -2)) and [date_part] <= Date.From(DateTime.LocalNow()))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [Acttim] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -2)) and [Acttim] <= Date.From(DateTime.LocalNow()))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_before_last_2months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -4)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -2)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -4)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -2)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_before_last_4months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -6)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -4)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -6)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -4)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_6months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -8)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -6)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -8)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -6)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_8months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -10)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -8)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -10)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -8)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_before_last_10months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -12)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -10)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -12)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -10)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_12months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -14)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -12)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -14)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -12)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_14months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -16)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -14)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -16)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -14)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_16months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -18)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -16)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -18)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -16)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_18months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -20)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -18)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -20)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -18)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_20months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -22)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -20)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -22)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -20)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_22months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -24)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -22)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -24)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -22)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_24months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -26)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -24)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -26)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -24)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_26months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -28)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -26)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -28)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -26)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_28months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -30)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -28)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -30)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -28)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_30months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -32)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -30)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -32)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -30)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_32months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -34)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -32)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -34)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -32)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "2Months_Before_last_34months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -36)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -34)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] >= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -36)) and [date_part] < Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -34)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        },
        {
          "name": "Months_Before_last_36months",
          "mode": "import",
          "source": {
            "type": "m",
            "expression": [
              "let",
              "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
              "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
              "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] <= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -36)))",
              "in",
              "    #\"Filtered Rows\""
            ]
          },
          "annotations": [
            {
              "name": "QueryEditorSerialization",
              "value": [
                "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>let",
                "    Source = #\"SQL/eval-opse2e-platform2-sql-server database windows net;evalopse2eplatform2dw\",",
                "    E2E_tF_rkem_dq_table = Source{[Schema=\"E2E\",Item=\"tF_rkem_dq_table\"]}[Data],",
                "#\"Filtered Rows\" = Table.SelectRows(E2E_tF_rkem_dq_table, each [date_part] <= Date.StartOfMonth(Date.AddMonths(Date.From(DateTime.LocalNow()), -36)))",
                "in",
                "    #\"Filtered Rows\"</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              ]
            }
          ]
        }
      ],
      "measures": [
        {
          "name": "delayed_containers_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Delayed_Container_ind])"
        },
        {
          "name": "Source_delayed_containers_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Source_delayed_container_ind])"
        },
        {
          "name": "delayed_ffe_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[delayed_ffe_ind])"
        },
        {
          "name": "Source_delayed_ffe_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Source_delayed_ffe_ind])"
        },
        {
          "name": "total_containers_count",
          "expression": "COUNT('E2E tF_rkem_dq_table'[eqpno])"
        },
        {
          "name": "delayed_empty_containers_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Delayed_empty_unit])"
        },
        {
          "name": "delayed_full_containers_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Delayed_full_unit])"
        },
        {
          "name": "delayed_lv_containers_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Delayed_live_reef_unit])"
        },
        {
          "name": "delayed_oog_containers_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Delayed_oog_unit])"
        },
        {
          "name": "delayed_hazard_containers_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Delayed_hazard_unit])"
        },
        {
          "name": "delayed_hazardreef_containers_sum",
          "expression": " SUM('E2E tF_rkem_dq_table'[Delayed_hazard_reef_unit])"
        },
        {
          "name": "Delayed_percent",
          "expression": "[delayed_containers_sum]/[total_containers_count]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "Completeness_percent",
          "expression": "1-[Delayed_percent]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "Source_Delayed_percent",
          "expression": "[Source_delayed_containers_sum]/[total_containers_count]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "ffe_total",
          "expression": "sum('E2E tF_rkem_dq_table'[ffe])"
        },
        {
          "name": "Delayed_ffe_percent",
          "expression": "[delayed_ffe_sum]/[ffe_total]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "Source_Delayed_ffe_percent",
          "expression": "[Source_delayed_ffe_sum]/[ffe_total]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "Empty_Containers_percent",
          "expression": "[delayed_empty_containers_sum]/[total_containers_count]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "Full_Containers_percent",
          "expression": "[delayed_full_containers_sum]/[total_containers_count]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "Livereefer_Containers_percent",
          "expression": "[delayed_lv_containers_sum]/[total_containers_count]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "oog_Containers_percent",
          "expression": "[delayed_oog_containers_sum]/[total_containers_count]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "Hazard_Containers_percent",
          "expression": "[delayed_hazard_containers_sum]/[total_containers_count]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "Hazardreefer_Containers_percent",
          "expression": "[delayed_hazardreef_containers_sum]/[total_containers_count]",
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "average_latency",
          "expression": "AVERAGE('E2E tF_rkem_dq_table'[LATENCY])"
        },
        {
          "name": "average_source_latency",
          "expression": "AVERAGE('E2E tF_rkem_dq_table'[Source_LATENCY])"
        },
        {
          "name": "Latency_percentile",
          "expression": " PERCENTILE.EXC('E2E tF_rkem_dq_table'[LATENCY],0.95)"
        },
        {
          "name": "Source_Latency_percentile",
          "expression": " PERCENTILE.EXC('E2E tF_rkem_dq_table'[Source_LATENCY],0.95)"
        },
        {
          "name": "avg_completeness_last_8W%",
          "expression": [
            " ",
            "var week = WEEKNUM(TODAY(),21) - 8",
            "return 1- CALCULATE(DIVIDE(SUMX('E2E tF_rkem_dq_table','E2E tF_rkem_dq_table'[delayed_containers_sum]),SUMX('E2E tF_rkem_dq_table','E2E tF_rkem_dq_table'[total_containers_count])), 'E2E tF_rkem_dq_table'[Week]>=week && 'E2E tF_rkem_dq_table'[Week]<=WEEKNUM(TODAY(),21),'E2E tF_rkem_dq_table'[year] = YEAR(TODAY()))"
          ],
          "formatString": "0.00%;-0.00%;0.00%"
        },
        {
          "name": "avg_adls_latency_last_8W",
          "expression": [
            " ",
            "var week = WEEKNUM(TODAY(),21) - 8",
            "return CALCULATE(AVERAGE('E2E tF_rkem_dq_table'[LATENCY]),'E2E tF_rkem_dq_table'[Week]>= week && 'E2E tF_rkem_dq_table'[Week]<=WEEKNUM(TODAY(),21),'E2E tF_rkem_dq_table'[year] = YEAR(TODAY()))"
          ]
        },
        {
          "name": "avg_source_latency_last_8W",
          "expression": [
            " ",
            "var week = WEEKNUM(TODAY(),21) - 8",
            "return CALCULATE(AVERAGE('E2E tF_rkem_dq_table'[Source_LATENCY]),'E2E tF_rkem_dq_table'[Week]>= week && 'E2E tF_rkem_dq_table'[Week]<=WEEKNUM(TODAY(),21),'E2E tF_rkem_dq_table'[year] = YEAR(TODAY()))"
          ]
        },
        {
          "name": "delayed_containers%_LOC",
          "expression": "DIVIDE(SUM('E2E tF_rkem_dq_table'[Delayed_Container_ind]),CALCULATE(SUM('E2E tF_rkem_dq_table'[Container_Count]), ALL('E2E tF_rkem_dq_table'[LOC_CD])))"
        },
        {
          "name": "Average Raw Latency",
          "expression": "AVERAGE('E2E tF_rkem_dq_table'[Raw_LATENCY])"
        },
        {
          "name": "95th% Raw Percentile",
          "expression": " PERCENTILE.EXC('E2E tF_rkem_dq_table'[Raw_LATENCY],0.95)"
        }
      ]
    }
  }
}

